{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","pieces.js","script.js","../../../.local/share/fnm/node-versions/v20.15.0/installation/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","_RenderTarget","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_this5","isDataArrayTexture","wrapR","layerUpdates","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this8","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","_Material","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this13","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this17","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this19","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","backgroundRotation","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","_m1$1","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","isInstancedBufferGeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_this24","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","shaderID","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","sort","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this25","isMeshDepthMaterial","_Material4","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","isFramebufferTexture","isCompressedTexture","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","levels","layerByteLength","_iterator4","_step4","layerData","subarray","_iterator5","_step5","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","ArrayCamera","_PerspectiveCamera","_this27","isArrayCamera","Group","_Object3D4","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator6","_step6","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator7","_step7","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","getDepthTexture","WebXRManager","_EventDispatcher6","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","_m1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_vector4","_emptyScene","overrideMaterial","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawInstances","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","isLOD","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","_indirectTexture","isMeshGouraudMaterial","environmentIntensity","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","_callee2","glBuffer","_framebuffer2","_callee2$","_context9","PIXEL_PACK_BUFFER","STREAM_READ","flush","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","getBufferSubData","deleteSync","_x4","_x5","_x6","_x7","_x8","_x9","_x10","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","minX","minY","dstX","dstY","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","copyTextureToTexture3D","minZ","dstZ","glTarget","initRenderTarget","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","FogExp2","Fog","Scene","_Object3D5","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this35","isBone","DataTexture","_Texture5","_this36","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_this38","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","_matrix$1","_invMatrixWorld","_identityMatrix","_whiteColor","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_this39","customSort","_drawInfo","_visibilityChanged","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","drawInfo","getBoundingBoxAt","getBoundingSphereAt","addInstance","drawId","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","setGeometryAt","dstIndex","srcIndex","posAttr","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","inf","multiDrawStarts","multiDrawCounts","culled","_Material6","_this40","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D9","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","checkIntersection","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this42","LineLoop","_Line2","_this43","_Material7","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this47","CompressedTexture","_Texture8","_this48","CompressedArrayTexture","_CompressedTexture","_this49","CompressedCubeTexture","_CompressedTexture2","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this52","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this54","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_this57","isLineCurve","LineCurve3","_Curve6","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this64","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this65","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this66","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this67","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this68","PolyhedronGeometry","_BufferGeometry6","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this71","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this74","OctahedronGeometry","_PolyhedronGeometry3","_this75","RingGeometry","_BufferGeometry9","_this76","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this79","TorusGeometry","_BufferGeometry12","_this80","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this84","RawShaderMaterial","_ShaderMaterial","_this85","_Material9","_this86","_MeshStandardMaterial","_this87","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","_Material10","_this88","_Material11","_this89","_Material12","_this90","_Material13","_this91","_Material14","_this92","_LineBasicMaterial","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_this96","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref3","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this97","HemisphereLight","_Light","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this99","isSpotLightShadow","SpotLight","_Light2","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_this102","DirectionalLightShadow","_LightShadow3","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_this104","AmbientLight","_Light5","_this105","RectAreaLight","_Light6","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this107","MaterialLoader","_Loader8","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this109","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee3","_callee3$","_context10","parseAsync","_x14","_x15","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","_parseAsync","_callee4","_callee4$","_context11","parseImagesAsync","_x16","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee6","_deserializeImage","_deserializedImage2","_callee6$","_context13","_deserializeImage3","_callee5","_url","_callee5$","_context12","_deserializeImage2","_x18","_x17","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this110","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this116","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this120","GridHelper","_LineSegments2","_this121","PolarGridHelper","_LineSegments3","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this125","Box3Helper","_LineSegments6","_this126","PlaneHelper","_Line3","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","WebGLMultipleRenderTargets","_WebGLRenderTarget4","_this130","isWebGLMultipleRenderTargets","revision","__THREE__","_three","require","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","performCursorZoom","clampDistance","prevRadius","newRadius","radiusDelta","dollyDirection","mouseBefore","mouse","prevZoom","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","getRootNode","interceptControlDown","capture","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","controlActive","getZoomScale","normalizedDelta","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateZoomParameters","rect","getBoundingClientRect","dist","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","getSecondPointerPosition","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","centerX","centerY","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","isTrackingPointer","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","customWheelEvent","deltaMode","newEvent","interceptControlUp","passive","trackPointer","THREE","_interopRequireWildcard","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","createCube","lineMaterial","getRandomPiece","pieces","createIPiece","createOPiece","createZPiece","createLPiece","createTPiece","createJPiece","createSPiece","getRandomCOlor","pos","_OrbitControls","_pieces","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","innerWidth","innerHeight","appendChild","currentPiece","colisionEnabled","gameOver","createThreeSidedGrid","addLights","getElementById","setInterval","updatePiecePosition","animate","disabled","dropPiece","ambientLight","directionalLight","baseGrid","leftGrid","backGrid","colidesWithSceneObjects","alert","piece","excludedGroupsUuid","otherPiece","checkCollision","group1","group2","obj1","box1","obj2","box2","boundryCheck","canMove","colisionTester","moveLeft","moveRight","moveUp","moveDown","rotateClockwise","rotateCounterClockwise","rotateDown","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '166';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$4.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$4.elements[ 0 ] *= invSX;\n\t\t_m1$4.elements[ 1 ] *= invSX;\n\t\t_m1$4.elements[ 2 ] *= invSX;\n\n\t\t_m1$4.elements[ 4 ] *= invSY;\n\t\t_m1$4.elements[ 5 ] *= invSY;\n\t\t_m1$4.elements[ 6 ] *= invSY;\n\n\t\t_m1$4.elements[ 8 ] *= invSZ;\n\t\t_m1$4.elements[ 9 ] *= invSZ;\n\t\t_m1$4.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$3.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$3 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {\n\n\t\tconsole.warn( 'Material: onBeforeRender() has been removed.' ); // @deprecated, r166\n\n\t}\n\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1$2.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\t#if ! defined( GL_ANGLE_multi_draw )\\n\\t#define gl_DrawID _gl_DrawID\\n\\tuniform int _gl_DrawID;\\n\\t#endif\\n\\tuniform highp sampler2D batchingTexture;\\n\\tuniform highp usampler2D batchingIdTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n\\tfloat getIndirectIndex( const in int i ) {\\n\\t\\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\\t\\tint x = i % size;\\n\\t\\tint y = i / size;\\n\\t\\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t\\n\\t\\t#else\\n\\t\\t\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n\tgetDepthTexture() {\n\n\t\treturn this.texture;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getDepthTexture = function () {\n\n\t\t\treturn depthSensing.getDepthTexture();\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _vector4 = new Vector4();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\n\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector4\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z, activeViewport.w );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.render( scene );\n\n\t\t\t} else {\n\n\t\t\t\t_this.clear();\n\n\t\t\t}\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\t\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\t\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\n\t\t\t\t\t\t} finally {\n\n\t\t\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn buffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tlevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\tlet width, height, minX, minY;\n\t\t\tlet dstX, dstY;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\n\t\t\t} else {\n\n\t\t\t\twidth = srcTexture.image.width;\n\t\t\t\theight = srcTexture.image.height;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.max.z - srcRegion.min.z;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.min.z;\n\n\t\t\t} else {\n\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\tdepth = image.depth;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per object\n\t\tthis._drawInfo = [];\n\n\t\t// geometry information\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxIndexCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst drawInfo = this._drawInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( drawInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst drawInfo = this._drawInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( drawInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._drawInfo.length >= this._maxInstanceCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tthis._drawInfo.push( {\n\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\n\t\t} );\n\n\t\t// initialize the matrix\n\t\tconst drawId = this._drawInfo.length - 1;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = matricesTexture.image.data;\n\t\t_identityMatrix.toArray( matricesArray, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._drawInfo.length >= this._maxInstanceCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, vertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, reservedRange.indexCount );\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ geometryId ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn geometryId;\n\n\t}\n\n\t/*\n\tdeleteGeometry( geometryId ) {\n\n\t\t// TODO: delete geometry and associated instances\n\n\t}\n\t*/\n\n\t/*\n\tdeleteInstance( instanceId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdrawInfo[ instanceId ].active = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\t*/\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ geometryId ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ geometryId ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\t// @TODO: Map id to index of the arrays because\n\t\t//        optimize() can make id mismatch the index\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcolor.toArray( colorsArray, instanceId * 4 );\n\t\tcolorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn color.fromArray( colorsArray, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tconst drawInfo = this._drawInfo;\n\t\tif (\n\t\t\tinstanceId >= drawInfo.length ||\n\t\t\tdrawInfo[ instanceId ].active === false ||\n\t\t\tdrawInfo[ instanceId ].visible === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdrawInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\t// return early if the geometry is out of range or not active\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn drawInfo[ instanceId ].visible;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! drawInfo[ i ].visible || ! drawInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tconst drawRange = drawRanges[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._drawInfo = source._drawInfo.map( inf => ( { ...inf } ) );\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( drawInfo[ i ].visible && drawInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( drawRanges[ geometryId ], z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tindirectArray[ count ] = item.index;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( drawInfo[ i ].visible && drawInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tindirectArray[ count ] = i;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, createCanvasElement };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst prevRadius = spherical.radius;\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\t\t\t\t\tzoomChanged = prevRadius != spherical.radius;\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\n\t\t\t\t\t\tzoomChanged = prevZoom !== scope.object.zoom;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\n\t\t\t\t\tif ( prevZoom !== scope.object.zoom ) {\n\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\tdocument.removeEventListener( 'keydown', interceptControlDown, { capture: true } );\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tlet controlActive = false;\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale( delta ) {\n\n\t\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed * normalizedDelta );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateZoomParameters( x, y ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst dx = x - rect.left;\n\t\t\tconst dy = y - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( dx / w ) * 2 - 1;\n\t\t\tmouse.y = - ( dy / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientX );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( dollyDelta.y ) );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( dollyDelta.y ) );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientY );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( event.deltaY ) );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( event.deltaY ) );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\t\tupdateZoomParameters( centerX, centerY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( isTrackingPointer( event ) ) return;\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tconst pointerId = pointers[ 0 ];\n\t\t\t\t\tconst position = pointerPositions[ pointerId ];\n\n\t\t\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\t\t\tonTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( customWheelEvent( event ) );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction customWheelEvent( event ) {\n\n\t\t\tconst mode = event.deltaMode;\n\n\t\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\t\tconst newEvent = {\n\t\t\t\tclientX: event.clientX,\n\t\t\t\tclientY: event.clientY,\n\t\t\t\tdeltaY: event.deltaY,\n\t\t\t};\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 1: // LINE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // PAGE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// detect if event was triggered by pinching\n\t\t\tif ( event.ctrlKey && ! controlActive ) {\n\n\t\t\t\tnewEvent.deltaY *= 10;\n\n\t\t\t}\n\n\t\t\treturn newEvent;\n\n\t\t}\n\n\t\tfunction interceptControlDown( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = true;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.addEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction interceptControlUp( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = false;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.removeEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event.pointerId );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isTrackingPointer( event ) {\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) return true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointerId = ( event.pointerId === pointers[ 0 ] ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keydown', interceptControlDown, { passive: true, capture: true } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import * as THREE from 'three';\n\nexport function createCube(color) {\n    const geometry = new THREE.BoxGeometry(.999,.999,.999);\n    const edges = new THREE.EdgesGeometry(geometry);\n    const material = new THREE.MeshToonMaterial({ color });\n    const mesh = new THREE.Mesh(geometry, material);\n    const lineMaterial = new THREE.LineBasicMaterial({ color: 0x000000 });\n    const wireframe = new THREE.LineSegments(edges, lineMaterial);\n    mesh.add(wireframe);\n    return mesh;\n}\n\nexport function getRandomPiece() {\n    const pieces = [\n        createIPiece, \n        createOPiece, \n        createZPiece, \n        createLPiece, \n        createTPiece, \n        createJPiece, \n        createSPiece\n    ];\n    const index = Math.floor(Math.random() * pieces.length);\n    console.log(`Called ${pieces[index].name}`);\n    return pieces[index]();\n}\n\nexport function createIPiece() {\n    const group = new THREE.Group();\n    const color = getRandomCOlor(); \n    for (let i = -1; i <= 2; i += 1) {\n        const cube = createCube(color);\n        cube.position.set(i, 0, 0);\n        group.add(cube);\n    }\n    return group;\n}\n\nexport function createOPiece() {\n    const group = new THREE.Group();\n    const color = getRandomCOlor(); \n    const positions = [\n        { x: 0, y: 0, z: 0 },\n        { x: 1, y: 0, z: 0 },\n        { x: 0, y: -1, z: 0 },\n        { x: 1, y: -1, z: 0 }\n    ];\n    positions.forEach(pos => {\n        const cube = createCube(color);\n        cube.position.set(pos.x, pos.y, pos.z);\n        group.add(cube);\n    });\n    return group;\n}\n\nexport function createZPiece() {\n    const group = new THREE.Group();\n    const color = getRandomCOlor();\n    const positions = [\n        { x: -1, y: 0, z: 0 },\n        { x: 0, y: 0, z: 0 },\n        { x: 0, y: -1, z: 0 },\n        { x: 1, y: -1, z: 0 }\n    ];\n    positions.forEach(pos => {\n        const cube = createCube(color);\n        cube.position.set(pos.x, pos.y, pos.z);\n        group.add(cube);\n    });\n    return group;\n}\n\nexport function createLPiece() {\n    const group = new THREE.Group();\n    const color = getRandomCOlor(); \n    const positions = [\n        { x: -1, y: 0, z: 0 },\n        { x: 0, y: 0, z: 0 },\n        { x: 1, y: 0, z: 0 },\n        { x: 1, y: -1, z: 0 }\n    ];\n    positions.forEach(pos => {\n        const cube = createCube(color);\n        cube.position.set(pos.x, pos.y, pos.z);\n        group.add(cube);\n    });\n    return group;\n}\n\nexport function createTPiece() {\n    const group = new THREE.Group();\n    const color = getRandomCOlor(); \n    const positions = [\n        { x: -1, y: 0, z: 0 },\n        { x: 0, y: 0, z: 0 },\n        { x: 1, y: 0, z: 0 },\n        { x: 0, y: -1, z: 0 }\n    ];\n    positions.forEach(pos => {\n        const cube = createCube(color);\n        cube.position.set(pos.x, pos.y, pos.z);\n        group.add(cube);\n    });\n    return group;\n}\n\nexport function createJPiece() {\n    const group = new THREE.Group();\n    const color = getRandomCOlor(); \n    const positions = [\n        { x: -1, y: 0, z: 0 },\n        { x: 0, y: 0, z: 0 },\n        { x: 1, y: 0, z: 0 },\n        { x: -1, y: -1, z: 0 }\n    ];\n    positions.forEach(pos => {\n        const cube = createCube(color);\n        cube.position.set(pos.x, pos.y, pos.z);\n        group.add(cube);\n    });\n    return group;\n}\n\nexport function createSPiece() {\n    const group = new THREE.Group();\n    const color = getRandomCOlor(); \n    const positions = [\n        { x: -1, y: -1, z: 0 },\n        { x: 0, y: -1, z: 0 },\n        { x: 0, y: 0, z: 0 },\n        { x: 1, y: 0, z: 0 }\n    ];\n    positions.forEach(pos => {\n        const cube = createCube(color);\n        cube.position.set(pos.x, pos.y, pos.z);\n        group.add(cube);\n    });\n    return group;\n}\n\n// return from an array of pastel colors\nfunction getRandomCOlor() {\n    const colors = [\n        0xffc0cb,  // Light Pink\n        0xffe4b5,  // Moccasin\n        0xdda0dd,  // Plum\n        0xadd8e6,  // Light Blue\n        0x98fb98,  // Pale Green\n        0xffdab9,  // Peach Puff\n        0xffb6c1,  // Light Coral\n        0xffefd5,  // Papaya Whip\n        0xfffacd,  // Lemon Chiffon\n        0xe6e6fa,  // Lavender\n        0xd8bfd8,  // Thistle\n        0xd3ffce,  // Light Sea Green\n        0xf5deb3,  // Wheat\n        0xffffe0,  // Light Yellow\n        0x87cefa,  // Light Sky Blue\n        0xafeeee,  // Pale Turquoise\n        0xf0e68c,  // Khaki\n        0xe0ffff,  // Light Cyan\n        0xf5f5dc,  // Beige\n        0xfff0f5   // Lavender Blush\n    ];    \n    const index = Math.floor(Math.random() * colors.length);\n    return colors[index];\n}","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { getRandomPiece } from './pieces.js';\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setClearColor(0xbdd9c3);\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\ncamera.position.set(6, 5, 30);\ncamera.lookAt(0, 0, 0);\nnew OrbitControls(camera, renderer.domElement);\nlet currentPiece = null;\nlet colisionEnabled = true;\nlet gameOver = false;\n\ninit();\n\nfunction init() {\n    createThreeSidedGrid();\n    addLights();\n\n}\n\ndocument.getElementById('startGameButton').addEventListener('click', function() {\n \n    setInterval(updatePiecePosition, 500); // Começa a atualizar a posição da peça\n    animate(); // Começa o loop de animação\n    this.disabled = true; // Desabilita o botão após iniciar o jogo para evitar reinícios\n});\n\n// Certifique-se de que a função `init` é chamada quando a página é carregada\ninit();\n\nfunction animate() {\n    requestAnimationFrame(animate);\n\n    if (!gameOver) {\n        dropPiece();\n    }\n\n    renderer.render(scene, camera);\n}\n\n\nfunction addLights() {\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    \n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n    directionalLight.position.set(10, 15, 10);\n    scene.add(directionalLight);\n}\n\nfunction createThreeSidedGrid() {\n    const size = 10;\n    const divisions = 10; \n    const color = new THREE.Color(\"black\"); \n\n    const group = new THREE.Group();\n    group.name = \"Grids\"\n\n    const baseGrid = new THREE.GridHelper(size, divisions, color, color);\n    baseGrid.position.y = -size / 2; \n    group.add(baseGrid);\n\n    const leftGrid = new THREE.GridHelper(size, divisions, color, color);\n    leftGrid.rotation.x = Math.PI / 2;\n    leftGrid.rotation.z = Math.PI / 2;\n    leftGrid.position.x = -size / 2;\n    group.add(leftGrid);\n\n    const backGrid = new THREE.GridHelper(size, divisions, color, color);\n    backGrid.rotation.x = Math.PI / 2;\n    backGrid.position.z = -size / 2;\n    group.add(backGrid);\n\n    scene.add(group);\n}\n\nfunction dropPiece() {\n    if (currentPiece === null) {\n        currentPiece = getRandomPiece();\n        currentPiece.position.y = 4.5;\n        currentPiece.name = `Piece (${scene.children.length})`;\n        scene.add(currentPiece);\n    }\n}\n\nfunction updatePiecePosition() {\n    if (currentPiece && colisionEnabled) {\n        currentPiece.position.y -= .9;\n\n        if (colidesWithSceneObjects(currentPiece)) {\n            currentPiece.position.y += 1;\n            // scene.add(currentPiece);\n\n            if (currentPiece.position.y > 4.4){\n                console.log(\"Game Over\");\n                alert(\"Game Over! x.x\")\n                gameOver = true;\n            }\n\n            currentPiece = null;\n        }\n    }\n}\n\nfunction colidesWithSceneObjects(piece, excludedGroupsUuid = []) {\n    // Check for collision with all other pieces in the scene\n    for (let otherPiece of scene.children) {\n        if (otherPiece !== piece && !excludedGroupsUuid.includes(otherPiece.uuid) && checkCollision(piece, otherPiece)) {\n            // Collision detected, stop moving the current piece\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkCollision(group1, group2) {\n    for (let obj1 of group1.children) {\n        const box1 = new THREE.Box3().setFromObject(obj1);\n\n        for (let obj2 of group2.children) {\n            const box2 = new THREE.Box3().setFromObject(obj2);\n\n            if (box1.intersectsBox(box2)) {\n                console.log(\"Collision detected between:\\n\\t\", \n                    group1.name, \"\\n\\tand\", group2.name);\n\n                console.log(\"Intersection occurs at:\", box1.intersect(box2));\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\n// direction is a char for the wasd or WASD keys\nfunction boundryCheck(direction) {\n    if (gameOver || !currentPiece) {\n        console.log(\"Game Over or no current piece\");\n        return false;\n    }\n\n    let canMove = true;\n    colisionEnabled = false; // Disable colision behavior so the piece doesn't stop\n\n    let colisionTester = currentPiece.clone();\n    colisionTester.visible = false;\n    scene.add(colisionTester);\n    \n    //if the clone moves to the direction typed and finds a colision, return false\n    switch (direction) {\n        case 'a':\n            moveLeft(colisionTester);\n            break;\n        case 'd':\n            moveRight(colisionTester);\n            break;\n        case 'w':\n            moveUp(colisionTester);\n            break;\n        case 's':\n            moveDown(colisionTester);\n            break;\n        case 'A':\n            rotateClockwise(colisionTester);\n            break;\n        case 'D':\n            rotateCounterClockwise(colisionTester);\n            break;\n        case 'W':\n            rotateUp(colisionTester);\n            break;\n        case 'S':\n            rotateDown(colisionTester);\n            break;\n    }\n\n    if (colidesWithSceneObjects(colisionTester, [currentPiece.uuid])) {\n        canMove = false;\n    }\n\n    scene.remove(colisionTester);\n    colisionEnabled = true;\n    return canMove;\n}\n\ndocument.addEventListener('keypress', (event) => {\n    if (event.key === 'p' ) {\n        console.log(currentPiece);\n    }\n    if (event.key === 'i') {\n        console.log(scene.children);\n    }\n\n    switch (event.key) {\n        case 'a':\n            moveLeft(currentPiece);\n            break;\n        case 'd':\n            moveRight(currentPiece);\n            break;\n        case 'w':\n            moveUp(currentPiece);\n            break;\n        case 's':\n            moveDown(currentPiece);\n            break;\n        case 'A':\n            rotateClockwise(currentPiece);\n            break;\n        case 'D':\n            rotateCounterClockwise(currentPiece);\n            break;\n        case 'W':\n            rotateUp(currentPiece);\n            break;\n        case 'S':\n            rotateDown(currentPiece);\n            break;\n    }\n})\n\n\nfunction moveLeft(piece) {\n    if(piece) {\n        piece.position.x += -1;\n    }\n}\n\nfunction moveRight(piece) {\n    if (piece) {\n        piece.position.x += 1;\n    }\n}\n\nfunction moveUp(piece) {\n    if (piece) {\n        piece.position.z -= 1;\n    }\n}\n\nfunction moveDown(piece) {\n    if (piece) {\n        piece.position.z += 1;\n    }\n}\n\nfunction rotateClockwise(piece) {\n    if (piece) {\n        piece.rotation.y += Math.PI / 2;\n    }\n}\n\nfunction rotateCounterClockwise(piece) {\n    if (piece) {\n        piece.rotation.y -= Math.PI / 2;\n    }\n}\n\nfunction rotateUp(piece) {\n    if (piece) {\n        piece.rotation.x += Math.PI / 2;\n    }\n}\n\nfunction rotateDown(piece) {\n    if (piece) {\n        piece.rotation.x -= Math.PI / 2;\n    }\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}